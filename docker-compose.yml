version: '3.8'

services:
  # 中州养老管理系统应用
  zzyl-admin:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: zzyl-admin
    ports:
      - "8080:8080"
    environment:
      - RUST_LOG=info
      - DATABASE_URL=mysql://root:password@mysql:3306/zzyl
      - REDIS_URL=redis://redis:6379/0
      - JWT_SECRET=zzyl_default_secret_key
    volumes:
      - ./config:/app/config
      - ./logs:/app/logs
      - ./uploads:/app/uploads
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - zzyl-network

  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: zzyl-mysql
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=password
      - MYSQL_DATABASE=zzyl
      - MYSQL_USER=zzyl
      - MYSQL_PASSWORD=zzyl123
    volumes:
      - mysql_data:/var/lib/mysql
      - ./sql:/docker-entrypoint-initdb.d
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10
    restart: unless-stopped
    networks:
      - zzyl-network

  # Redis 缓存
  redis:
    image: redis:7-alpine
    container_name: zzyl-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      timeout: 3s
      retries: 5
    restart: unless-stopped
    networks:
      - zzyl-network

  # Nginx 反向代理
  nginx:
    image: nginx:alpine
    container_name: zzyl-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/ssl:/etc/nginx/ssl
      - ./logs/nginx:/var/log/nginx
    depends_on:
      - zzyl-admin
    restart: unless-stopped
    networks:
      - zzyl-network

  # 监控服务 - Prometheus
  prometheus:
    image: prom/prometheus:latest
    container_name: zzyl-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - zzyl-network

  # 监控服务 - Grafana
  grafana:
    image: grafana/grafana:latest
    container_name: zzyl-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus
    restart: unless-stopped
    networks:
      - zzyl-network

  # 日志收集 - Elasticsearch
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: zzyl-elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    restart: unless-stopped
    networks:
      - zzyl-network

  # 日志收集 - Logstash
  logstash:
    image: docker.elastic.co/logstash/logstash:8.11.0
    container_name: zzyl-logstash
    volumes:
      - ./monitoring/logstash/pipeline:/usr/share/logstash/pipeline
      - ./logs:/usr/share/logstash/logs
    depends_on:
      - elasticsearch
    restart: unless-stopped
    networks:
      - zzyl-network

  # 日志可视化 - Kibana
  kibana:
    image: docker.elastic.co/kibana/kibana:8.11.0
    container_name: zzyl-kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    depends_on:
      - elasticsearch
    restart: unless-stopped
    networks:
      - zzyl-network

# 数据卷
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  elasticsearch_data:
    driver: local

# 网络
networks:
  zzyl-network:
    driver: bridge

